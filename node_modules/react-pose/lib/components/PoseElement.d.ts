import * as React from 'react';
import { DomPopmotionPoser } from 'popmotion-pose/lib/types';
import { ChildRegistration, CurrentPose, PoseElementInternalProps, PopStyle } from './PoseElement.types';
export declare const PoseParentContext: React.Context<{}>;
declare type Ref = (ref: Element) => any;
declare type RefSetters = {
    ref?: Ref;
    innerRef?: Ref;
    hostRef?: Ref;
};
declare class PoseElement extends React.PureComponent<PoseElementInternalProps> {
    props: PoseElementInternalProps;
    poser: DomPopmotionPoser;
    ref: Element;
    styleProps: {
        [key: string]: any;
    };
    children: Set<ChildRegistration>;
    popStyle?: PopStyle;
    private childrenHandlers;
    getInitialPose(): CurrentPose;
    getFirstPose(): CurrentPose | void;
    getSetProps(): {
        [key: string]: any;
        withParent?: boolean;
    };
    getRefs: () => RefSetters;
    setRef: (ref: Element) => void;
    componentDidMount(): void;
    UNSAFE_componentWillUpdate({ pose, _pose }: PoseElementInternalProps): void;
    componentDidUpdate(prevProps: PoseElementInternalProps): void;
    componentWillUnmount(): void;
    initPoser(poser: DomPopmotionPoser): void;
    setPose(pose: CurrentPose): void;
    flushChildren(): void;
    render(): JSX.Element;
}
export { PoseElement };
